<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Verify Forms - Smart Scheme</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary: #512da8;
            --primary-dark: #4527a0;
            --danger: #f44336;
            --success: #4caf50;
            --light-bg: #f5f7fa;
            --text: #333;
        }
        
        body {
            font-family: 'Montserrat', sans-serif;
            background: var(--light-bg);
            color: var(--text);
            margin: 0;
        }

        /* Sidebar - Synced with Admin Panel */
        .sidebar {
            width: 250px;
            height: 100vh;
            background: var(--primary);
            color: white;
            position: fixed;
            padding: 20px;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
        }

        .sidebar-header {
            padding: 20px 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            margin-bottom: 20px;
            text-align: center;
        }

        .sidebar h2 {
            font-size: 1.5rem;
            font-weight: 600;
            margin: 0;
        }

        .sidebar ul {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .sidebar li {
            padding: 12px 20px;
            margin-bottom: 8px;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s;
            display: flex;
            align-items: center;
        }

        .sidebar li:hover {
            background: var(--primary-dark);
        }

        .sidebar li.active {
            background: var(--primary-dark);
            font-weight: 600;
        }

        .sidebar li i {
            margin-right: 10px;
            width: 24px;
            text-align: center;
        }

        .sidebar li.logout {
            background: var(--danger);
            margin-top: 20px;
            justify-content: center;
        }

        .sidebar li.logout:hover {
            background: #d32f2f;
        }

        .badge {
            background: var(--danger);
            color: white;
            border-radius: 50%;
            padding: 3px 8px;
            font-size: 0.75rem;
            margin-left: auto;
        }

        /* Main Content */
        .main-content {
            margin-left: 280px;
            padding: 30px;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
            margin-bottom: 30px;
        }

        .header h1 {
            font-size: 1.8rem;
            color: var(--primary);
            margin: 0;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        /* Application Cards */
        .applications-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 20px;
        }

        .application-card {
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
            overflow: hidden;
            transition: transform 0.3s, box-shadow 0.3s;
        }

        .application-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
        }

        .card-header {
            padding: 15px 20px;
            border-bottom: 1px solid #eee;
            background: var(--primary);
            color: white;
        }

        .card-user {
            font-weight: 600;
            font-size: 1.1rem;
        }

        .card-date {
            font-size: 0.8rem;
            opacity: 0.8;
            margin-top: 5px;
        }

        .card-body {
            padding: 20px;
        }

        .card-scheme {
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 10px;
            color: var(--primary);
        }

        .card-id {
            font-size: 0.85rem;
            color: #666;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .card-id i {
            color: var(--primary);
        }

        .card-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
        }

        .btn {
            padding: 8px 16px;
            border-radius: 6px;
            font-weight: 500;
            cursor: pointer;
            border: none;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .btn-view {
            background: var(--primary);
            color: white;
        }

        .btn-view:hover {
            background: var(--primary-dark);
        }

        /* PDF Modal */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background: white;
            border-radius: 10px;
            width: 90%;
            height: 90%;
            max-width: 1200px;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .modal-header {
            padding: 15px 20px;
            border-bottom: 1px solid #eee;
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: var(--primary);
            color: white;
        }

        .modal-title {
            font-size: 1.2rem;
            font-weight: 600;
        }

        .modal-close {
            font-size: 1.5rem;
            cursor: pointer;
        }

        .modal-body {
            flex: 1;
            padding: 20px;
            display: flex;
            flex-direction: column;
        }

        .pdf-viewer {
            flex: 1;
            border: 1px solid #ddd;
            border-radius: 6px;
            margin-bottom: 20px;
            width: 100%;
        }

        /* Rejection Section */
        .rejection-section {
            margin-top: 20px;
            display: none;
            background: #fff8f8;
            padding: 15px;
            border-radius: 6px;
            border: 1px solid #ffdddd;
        }

        .rejection-section h4 {
            margin-top: 0;
            color: var(--danger);
        }

        .rejection-section textarea {
            width: 100%;
            padding: 12px;
            border: 1px solid #ffcccc;
            border-radius: 6px;
            resize: vertical;
            min-height: 100px;
            font-family: inherit;
        }

        /* Action Buttons */
        .modal-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 15px;
        }

        .btn-approve {
            background: var(--success);
            color: white;
        }

        .btn-approve:hover {
            background: #3e8e41;
        }

        .btn-reject {
            background: var(--danger);
            color: white;
        }

        .btn-reject:hover {
            background: #d32f2f;
        }

        .btn-cancel {
            background: #f0f0f0;
            color: var(--text);
        }

        .btn-cancel:hover {
            background: #e0e0e0;
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 50px 20px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
        }

        .empty-state i {
            font-size: 3rem;
            color: #ccc;
            margin-bottom: 20px;
        }

        .empty-state h3 {
            color: #666;
            margin-bottom: 15px;
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="sidebar-header">
            <h2>Smart Scheme</h2>
        </div>
        <ul>
            <li onclick="window.location.href='/admin-panel'">
                <i class="fas fa-tachometer-alt"></i> Dashboard
            </li>
            <li onclick="window.location.href='/remove-scheme'">
                <i class="fas fa-tasks"></i> Manage Schemes
            </li>
            <li class="active">
                <i class="fas fa-file-alt"></i> Verify Forms
                {{#if pendingFormsCount}}
                    <span class="badge">{{pendingFormsCount}}</span>
                {{/if}}
            </li>
            <li class="logout" onclick="window.location.href='/logout'">
                <i class="fas fa-sign-out-alt"></i> Logout
            </li>
        </ul>
    </div>

    <!-- Main Content -->
      <div class="main-content">
    <div class="header">
        <h1><i class="fas fa-file-signature"></i> Verify Applications</h1>
    </div>

    {{#if applications.length}}
        <div class="applications-container">
            {{#each applications}}
            <div class="application-card" data-id="{{this._id}}">
                <div class="card-header">
                    <div class="card-user">{{this.userId}}</div>
                    <div class="card-date">{{formatDate this.createdAt}}</div>
                </div>
                <div class="card-body">
                    <div class="card-scheme">{{this.scholarshipName}}</div>
                    <div class="card-id">
                        <i class="fas fa-hashtag"></i> {{this.applicationNo}}
                    </div>
                    {{#if this.assignedTo}}
                        <div class="card-assigned">
                            <p>Assigned to: {{this.assignedTo}}</p>
                        </div>
                    {{/if}}
                    <div class="card-actions">
                        <button class="btn btn-view view-pdf-btn" data-id="{{this._id}}" data-pdf-path="{{this.pdfPath}}">
                            <i class="fas fa-eye"></i> View PDF
                        </button>
                        {{#unless this.assignedTo}}
                            <button class="btn btn-primary assign-btn" data-id="{{this._id}}">Assign to Me</button>
                        {{/unless}}
                    </div>
                </div>
            </div>
            {{/each}}
        </div>
    {{else}}
        <div class="empty-state">
            <i class="fas fa-folder-open"></i>
            <h3>No pending applications to verify</h3>
            <p>All applications have been processed</p>
        </div>
    {{/if}}
</div>



    <!-- PDF Modal -->
    <div class="modal" id="pdfModal">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">Application Review</div>
                <div class="modal-close" onclick="closeModal()">&times;</div>
            </div>
            <div class="modal-body">
                <iframe id="pdfViewer" class="pdf-viewer" frameborder="0"></iframe>
                
                <!-- Rejection Reason Section -->
                <div class="rejection-section" id="rejectionSection">
                    <h4>Reason for Rejection</h4>
                    <textarea id="rejectionReason" placeholder="Please provide specific reasons for rejecting this application..."></textarea>
                    <div class="modal-actions">
                        <button class="btn btn-cancel" onclick="cancelRejection()">
                            <i class="fas fa-times"></i> Cancel
                        </button>
                        <button class="btn btn-reject" onclick="submitRejection()">
                            <i class="fas fa-ban"></i> Confirm Rejection
                        </button>
                    </div>
                </div>
                
                <!-- Normal Action Buttons -->
                <div class="modal-actions" id="normalActions">
                    <button class="btn btn-cancel" onclick="closeModal()">
                        <i class="fas fa-times"></i> Close
                    </button>
                    <button class="btn btn-reject" onclick="showRejectionSection()">
                        <i class="fas fa-ban"></i> Reject
                    </button>
                    <button class="btn btn-approve" onclick="approveApplication()">
                        <i class="fas fa-check-circle"></i> Certify
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
       document.addEventListener('DOMContentLoaded', function() {
        // Handle assign button clicks
        document.addEventListener('click', function(event) {
            if (event.target && event.target.classList.contains('assign-btn')) {
                const button = event.target;
                const appId = button.getAttribute('data-id');
                if (confirm('Are you sure you want to assign this application to yourself?')) {
                    fetch(`/assign-application/${appId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        credentials: 'same-origin',
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        window.location.reload();
                    })
                    .catch(error => {
                        console.error('Error assigning application:', error);
                        alert('Failed to assign application. Please try again.');
                    });
                }
            }
        });
    });
        let currentAppId = null;
    let currentPdfPath = null;

    // Open modal with PDF
    function openModal(appId, pdfPath) {
        console.log("Opening modal for application ID:", appId, "with PDF path:", pdfPath);
        currentAppId = appId;
        currentPdfPath = pdfPath;

        // Normalize path (handle both absolute and relative paths)
        let normalizedPath = pdfPath;
        if (!pdfPath.startsWith('/')) {
            normalizedPath = '/' + pdfPath; // Ensure the path starts with a slash
        }

        // Encode for URL and set viewer source
        const encodedPath = encodeURIComponent(normalizedPath);
        document.getElementById('pdfViewer').src = `/view-pdf?path=${encodedPath}`;

        // Show modal
        document.getElementById('pdfModal').style.display = 'flex';
        document.body.style.overflow = 'hidden';

        // Reset modal state
        document.getElementById('rejectionSection').style.display = 'none';
        document.getElementById('normalActions').style.display = 'flex';
        document.getElementById('rejectionReason').value = '';
    }

    // Attach event listeners to all "View PDF" buttons
    document.addEventListener('DOMContentLoaded', function() {
        const viewPdfButtons = document.querySelectorAll('.view-pdf-btn');
        viewPdfButtons.forEach(button => {
            button.addEventListener('click', function() {
                const appId = this.getAttribute('data-id');
                const pdfPath = this.getAttribute('data-pdf-path');
                openModal(appId, pdfPath);
            });
        });
    });

    // Close modal
    function closeModal() {
        document.getElementById('pdfModal').style.display = 'none';
        document.body.style.overflow = 'auto';
    }

    // Show rejection section
    function showRejectionSection() {
        document.getElementById('rejectionSection').style.display = 'block';
        document.getElementById('normalActions').style.display = 'none';
    }

    // Cancel rejection
    function cancelRejection() {
        document.getElementById('rejectionSection').style.display = 'none';
        document.getElementById('normalActions').style.display = 'flex';
        document.getElementById('rejectionReason').value = '';
    }
        // Approve application
        async function approveApplication() {
            if (!currentAppId) return;
            
            try {
                const response = await fetch(`/mark-certified/${currentAppId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                if (response.ok) {
                    alert('Application certified successfully!');
                    window.location.reload();
                } else {
                    throw new Error(await response.text());
                }
            } catch (error) {
                console.error('Error:', error);
                alert(`Error certifying application: ${error.message}`);
            }
        }

        // Reject application
        async function submitRejection() {
            const reason = document.getElementById('rejectionReason').value.trim();
            if (!reason) {
                alert('Please enter a rejection reason');
                return;
            }
            
            try {
                const response = await fetch(`/mark-rejected/${currentAppId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ reason })
                });
                
                if (response.ok) {
                    alert('Application rejected successfully!');
                    window.location.reload();
                } else {
                    throw new Error(await response.text());
                }
            } catch (error) {
                console.error('Error:', error);
                alert(`Error rejecting application: ${error.message}`);
            }
        }

        // Close modal when clicking outside content
        document.querySelector('.modal').addEventListener('click', function(e) {
            if (e.target === this) closeModal();
        });
    </script>
</body>
</html>